import { OnModuleInit } from '@nestjs/common';
import { SocketGateway } from '@sockets/gateway/sockets.gateway';
import { VariablesService } from '../variables/variables.service';
export declare class OnvifDeviceService implements OnModuleInit {
    private readonly socketGateway;
    private readonly variableService;
    constructor(socketGateway: SocketGateway, variableService: VariablesService);
    private server;
    private service;
    onModuleInit(): Promise<void>;
    getVariables(): Promise<void>;
    getWSDLPath(category: string, filename: string): string;
    generateUUID(): string;
    getXaddrs(url: string): string;
    getXaddr(ip: string, url: string): string;
    getStream(ip: string, url: string): string;
    getLocalIp(clientIp: string): any;
    getLocalIps(): string[];
    hello(): Promise<void>;
    responseProbe(message: any, rinfo: any): Promise<void>;
    responseSystemDateAndTime(): Promise<unknown>;
    setSystemDateAndTime(): Promise<void>;
    responseCapabilities(_ip: string): Promise<unknown>;
    responseDeviceInformation(): Promise<unknown>;
    getScopeQuery(scope: string): string;
    responseScopes(): Promise<unknown>;
    responseNetworkInterfaces(_ip: string): Promise<unknown>;
    responseDNS(_ip: string): Promise<unknown>;
    responseNTP(): Promise<unknown>;
    getActiveConnections(): string[];
    getConnection(_ip: string): any;
    responseDefaultGateway(_ip: string): Promise<unknown>;
    responseDiscoveryMode(): Promise<unknown>;
    responseNetworkProtocols(): Promise<unknown>;
    responseHostname(): Promise<unknown>;
    responseServices(_ip: string): Promise<unknown>;
    responseMediaProfiles(): Promise<unknown>;
    responseMediaProfile(): Promise<unknown>;
    responseVideoSourceConfiguration(): Promise<unknown>;
    responseVideoSources(): Promise<unknown>;
    responseAudioSources(): Promise<unknown>;
    responseSnapshotUri(_ip: string): Promise<unknown>;
    responseStreamUri(_ip: string): Promise<unknown>;
    responsePTZMove(title: string): Promise<unknown>;
    responseSetPreset(): Promise<unknown>;
}
